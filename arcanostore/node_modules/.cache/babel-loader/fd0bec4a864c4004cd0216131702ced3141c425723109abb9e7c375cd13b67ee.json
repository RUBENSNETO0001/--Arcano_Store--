{"ast":null,"code":"import { useDateFieldState as $3c0fc76039f1c516$export$60e84778edff6d26 } from \"./useDateFieldState.mjs\";\nimport { Time as $2PRh3$Time, toZoned as $2PRh3$toZoned, toTime as $2PRh3$toTime, GregorianCalendar as $2PRh3$GregorianCalendar, today as $2PRh3$today, getLocalTimeZone as $2PRh3$getLocalTimeZone, toCalendarDateTime as $2PRh3$toCalendarDateTime } from \"@internationalized/date\";\nimport { useMemo as $2PRh3$useMemo, useCallback as $2PRh3$useCallback } from \"react\";\nimport { useControlledState as $2PRh3$useControlledState } from \"@react-stately/utils\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $eff5d8ee529ac4bb$export$fd53cef0cc796101(props) {\n  let {\n    placeholderValue = new (0, $2PRh3$Time)(),\n    minValue: minValue,\n    maxValue: maxValue,\n    defaultValue: defaultValue,\n    granularity: granularity,\n    validate: validate\n  } = props;\n  let [value, setValue] = (0, $2PRh3$useControlledState)(props.value, defaultValue !== null && defaultValue !== void 0 ? defaultValue : null, props.onChange);\n  let v = value || placeholderValue;\n  let day = v && 'day' in v ? v : undefined;\n  let defaultValueTimeZone = defaultValue && 'timeZone' in defaultValue ? defaultValue.timeZone : undefined;\n  let placeholderDate = (0, $2PRh3$useMemo)(() => {\n    let valueTimeZone = v && 'timeZone' in v ? v.timeZone : undefined;\n    return (valueTimeZone || defaultValueTimeZone) && placeholderValue ? (0, $2PRh3$toZoned)($eff5d8ee529ac4bb$var$convertValue(placeholderValue), valueTimeZone || defaultValueTimeZone) : $eff5d8ee529ac4bb$var$convertValue(placeholderValue);\n  }, [placeholderValue, v, defaultValueTimeZone]);\n  let minDate = (0, $2PRh3$useMemo)(() => $eff5d8ee529ac4bb$var$convertValue(minValue, day), [minValue, day]);\n  let maxDate = (0, $2PRh3$useMemo)(() => $eff5d8ee529ac4bb$var$convertValue(maxValue, day), [maxValue, day]);\n  let timeValue = (0, $2PRh3$useMemo)(() => value && 'day' in value ? (0, $2PRh3$toTime)(value) : value, [value]);\n  let dateTime = (0, $2PRh3$useMemo)(() => value == null ? null : $eff5d8ee529ac4bb$var$convertValue(value), [value]);\n  let defaultDateTime = (0, $2PRh3$useMemo)(() => defaultValue == null ? null : $eff5d8ee529ac4bb$var$convertValue(defaultValue), [defaultValue]);\n  let onChange = newValue => {\n    setValue(day || defaultValueTimeZone ? newValue : newValue && (0, $2PRh3$toTime)(newValue));\n  };\n  let state = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({\n    ...props,\n    value: dateTime,\n    defaultValue: defaultDateTime,\n    minValue: minDate,\n    maxValue: maxDate,\n    onChange: onChange,\n    granularity: granularity || 'minute',\n    maxGranularity: 'hour',\n    placeholderValue: placeholderDate !== null && placeholderDate !== void 0 ? placeholderDate : undefined,\n    // Calendar should not matter for time fields.\n    createCalendar: () => new (0, $2PRh3$GregorianCalendar)(),\n    validate: (0, $2PRh3$useCallback)(() => validate === null || validate === void 0 ? void 0 : validate(value), [validate, value])\n  });\n  return {\n    ...state,\n    timeValue: timeValue\n  };\n}\nfunction $eff5d8ee529ac4bb$var$convertValue(value, date = (0, $2PRh3$today)((0, $2PRh3$getLocalTimeZone)())) {\n  if (!value) return null;\n  if ('day' in value) return value;\n  return (0, $2PRh3$toCalendarDateTime)(date, value);\n}\nexport { $eff5d8ee529ac4bb$export$fd53cef0cc796101 as useTimeFieldState };","map":{"version":3,"names":["$eff5d8ee529ac4bb$export$fd53cef0cc796101","props","placeholderValue","$2PRh3$Time","minValue","maxValue","defaultValue","granularity","validate","value","setValue","$2PRh3$useControlledState","onChange","v","day","undefined","defaultValueTimeZone","timeZone","placeholderDate","$2PRh3$useMemo","valueTimeZone","$2PRh3$toZoned","$eff5d8ee529ac4bb$var$convertValue","minDate","maxDate","timeValue","$2PRh3$toTime","dateTime","defaultDateTime","newValue","state","$3c0fc76039f1c516$export$60e84778edff6d26","maxGranularity","createCalendar","$2PRh3$GregorianCalendar","$2PRh3$useCallback","date","$2PRh3$today","$2PRh3$getLocalTimeZone","$2PRh3$toCalendarDateTime"],"sources":["C:\\Users\\Aluno\\Documents\\GitHub\\--Arcano_Store--\\arcanostore\\node_modules\\@react-stately\\datepicker\\dist\\packages\\@react-stately\\datepicker\\src\\useTimeFieldState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFieldState, useDateFieldState} from '.';\nimport {DateValue, MappedTimeValue, TimePickerProps, TimeValue} from '@react-types/datepicker';\nimport {getLocalTimeZone, GregorianCalendar, Time, toCalendarDateTime, today, toTime, toZoned} from '@internationalized/date';\nimport {useCallback, useMemo} from 'react';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface TimeFieldStateOptions<T extends TimeValue = TimeValue> extends TimePickerProps<T> {\n  /** The locale to display and edit the value according to. */\n  locale: string\n}\n\nexport interface TimeFieldState extends DateFieldState {\n  /** The current time value. */\n  timeValue: Time\n}\n\n/**\n * Provides state management for a time field component.\n * A time field allows users to enter and edit time values using a keyboard.\n * Each part of a time value is displayed in an individually editable segment.\n */\nexport function useTimeFieldState<T extends TimeValue = TimeValue>(props: TimeFieldStateOptions<T>): TimeFieldState {\n  let {\n    placeholderValue = new Time(),\n    minValue,\n    maxValue,\n    defaultValue,\n    granularity,\n    validate\n  } = props;\n\n  let [value, setValue] = useControlledState<TimeValue | null, MappedTimeValue<T> | null>(\n    props.value,\n    defaultValue ?? null,\n    props.onChange\n  );\n\n  let v = value || placeholderValue;\n  let day = v && 'day' in v ? v : undefined;\n  let defaultValueTimeZone = defaultValue && 'timeZone' in defaultValue ? defaultValue.timeZone : undefined;\n  let placeholderDate = useMemo(() => {\n    let valueTimeZone = v && 'timeZone' in v ? v.timeZone : undefined;\n\n    return (valueTimeZone || defaultValueTimeZone) && placeholderValue ? toZoned(convertValue(placeholderValue)!, valueTimeZone || defaultValueTimeZone!) : convertValue(placeholderValue);\n  }, [placeholderValue, v, defaultValueTimeZone]);\n  let minDate = useMemo(() => convertValue(minValue, day), [minValue, day]);\n  let maxDate = useMemo(() => convertValue(maxValue, day), [maxValue, day]);\n\n  let timeValue = useMemo(() => value && 'day' in value ? toTime(value) : value as Time, [value]);\n  let dateTime = useMemo(() => value == null ? null : convertValue(value), [value]);\n  let defaultDateTime = useMemo(() => defaultValue == null ? null : convertValue(defaultValue), [defaultValue]);\n  let onChange = newValue => {\n    setValue(day || defaultValueTimeZone ? newValue : newValue && toTime(newValue));\n  };\n\n  let state = useDateFieldState({\n    ...props,\n    value: dateTime,\n    defaultValue: defaultDateTime,\n    minValue: minDate,\n    maxValue: maxDate,\n    onChange,\n    granularity: granularity || 'minute',\n    maxGranularity: 'hour',\n    placeholderValue: placeholderDate ?? undefined,\n    // Calendar should not matter for time fields.\n    createCalendar: () => new GregorianCalendar(),\n    validate: useCallback(() => validate?.(value as any), [validate, value])\n  });\n\n  return {\n    ...state,\n    timeValue\n  };\n}\n\nfunction convertValue(value: TimeValue | null | undefined, date: DateValue = today(getLocalTimeZone())) {\n  if (!value) {\n    return null;\n  }\n\n  if ('day' in value) {\n    return value;\n  }\n\n  return toCalendarDateTime(date, value);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}