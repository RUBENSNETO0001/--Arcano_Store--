{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/--Arcano_Store--/arcanostore/src/componetes_secundarios/login_registro.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport '../css/Registro/login.css';\nimport React, { useState } from 'react';\nimport { fazerLogin, registrarUsuario } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm({\n  onLoginSuccess\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    senha: '' // ATENÇÃO: Confirme se seu PHP espera 'senha' ou 'password'\n  });\n  const [message, setMessage] = useState(null);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(null);\n    if (!formData.email || !formData.senha) {\n      setMessage({\n        sucesso: false,\n        mensagem: \"Por favor, preencha o Email e a Senha.\"\n      });\n      return;\n    }\n\n    // Chama a função de serviço de LOGIN\n    const resultado = await fazerLogin(formData);\n    setMessage(resultado);\n    if (resultado.sucesso) {\n      onLoginSuccess(formData.email); // Informa ao componente pai (App) sobre o sucesso\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"senha\",\n        children: \"Senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"senha\",\n        name: \"senha\" // Deve bater com a chave enviada no formData\n        ,\n        value: formData.senha,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Entrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: message.sucesso ? 'green' : 'red',\n        marginTop: '10px'\n      },\n      children: message.mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"K5bHBrqKHptPguhojp7WvWOiZWw=\");\n_c = LoginForm;\nconst RegistrationForm = () => {\n  _s2();\n  const [formData, setFormData] = useState({\n    full_name: '',\n    email: '',\n    date_nas: '',\n    cpf: '',\n    telefone: '',\n    password: '',\n    // ATENÇÃO: Deve bater com o que o PHP espera\n    confirm_password: ''\n  });\n  const [status, setStatus] = useState({\n    mensagem: '',\n    sucesso: false\n  });\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus({\n      mensagem: '',\n      sucesso: false\n    });\n    if (formData.password !== formData.confirm_password) {\n      setStatus({\n        mensagem: \"As senhas não coincidem!\",\n        sucesso: false\n      });\n      return;\n    }\n    setStatus({\n      mensagem: 'Enviando dados...',\n      sucesso: false\n    });\n    setLoading(true);\n\n    // Chama a função de serviço de REGISTRO\n    const resultadoAPI = await registrarUsuario(formData);\n    if (resultadoAPI.sucesso) {\n      setStatus({\n        mensagem: `Sucesso: ${resultadoAPI.mensagem}`,\n        sucesso: true\n      });\n      setFormData({\n        // Limpa os campos após sucesso\n        full_name: '',\n        email: '',\n        date_nas: '',\n        cpf: '',\n        telefone: '',\n        password: '',\n        confirm_password: ''\n      });\n    } else {\n      setStatus({\n        mensagem: `Erro: ${resultadoAPI.mensagem}`,\n        sucesso: false\n      });\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    method: \"POST\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-name\",\n      children: \"Nome Completo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"register-name\",\n      name: \"full_name\",\n      value: formData.full_name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"register-email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-dataNascimento\",\n      children: \"Data de Nascimento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"register-dataNascimento\",\n      name: \"date_nas\",\n      value: formData.date_nas,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-cpf\",\n      children: \"CPF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"register-cpf\",\n      name: \"cpf\",\n      value: formData.cpf,\n      onChange: handleChange,\n      required: true,\n      maxLength: 11\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-telefone\",\n      children: \"Telefone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"register-telefone\",\n      name: \"telefone\",\n      value: formData.telefone,\n      onChange: handleChange,\n      required: true,\n      maxLength: 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-password\",\n      children: \"Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"register-password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      required: true,\n      minLength: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-confirm-password\",\n      children: \"Confirma\\xE7\\xE3o de Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"register-confirm-password\",\n      name: \"confirm_password\",\n      value: formData.confirm_password,\n      onChange: handleChange,\n      required: true,\n      minLength: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: loading ? \"Cadastrando...\" : \"Cadastrar\",\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), status.mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: status.sucesso ? 'success' : 'error',\n      children: status.mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n// ==================================================================\n// 3. COMPONENTE PRINCIPAL (AuthPage)\n// ==================================================================\n_s2(RegistrationForm, \"R1MQdRfOwk3fiHN46IUyHQpEUmA=\");\n_c2 = RegistrationForm;\nconst AuthPage = () => {\n  _s3();\n  const [isLogin, setIsLogin] = useState(true);\n  const [loginStatus, setLoginStatus] = useState(false); // Estado que será repassado para o App principal\n\n  const handleLoginSuccess = email => {\n    // 1. Atualiza o estado local (Para esconder o formulário de login/mostrar o botão de sair)\n    setLoginStatus(true);\n\n    // 2. Persiste o estado (Conforme sua lógica anterior)\n    localStorage.setItem('usuarioLogado', 'true');\n    alert(`Login de ${email} realizado com sucesso!`);\n\n    // 3. Redirecionamento (Se aplicável)\n    window.location.href = '/index.html';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_Registro\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLogin(true),\n        style: {\n          fontWeight: isLogin ? 'bold' : 'normal'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLogin(false),\n        style: {\n          fontWeight: !isLogin ? 'bold' : 'normal'\n        },\n        children: \"Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), isLogin ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(RegistrationForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n_s3(AuthPage, \"q/J1PCCxSqeYmA8jHMMpWVyoI+k=\");\n_c3 = AuthPage;\nexport default AuthPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"RegistrationForm\");\n$RefreshReg$(_c3, \"AuthPage\");","map":{"version":3,"names":["React","useState","fazerLogin","registrarUsuario","jsxDEV","_jsxDEV","LoginForm","onLoginSuccess","_s","formData","setFormData","email","senha","message","setMessage","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","sucesso","mensagem","resultado","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","required","style","color","marginTop","_c","RegistrationForm","_s2","full_name","date_nas","cpf","telefone","password","confirm_password","status","setStatus","loading","setLoading","resultadoAPI","method","maxLength","minLength","disabled","className","_c2","AuthPage","_s3","isLogin","setIsLogin","loginStatus","setLoginStatus","handleLoginSuccess","localStorage","setItem","alert","window","location","href","onClick","fontWeight","_c3","$RefreshReg$"],"sources":["/opt/lampp/htdocs/--Arcano_Store--/arcanostore/src/componetes_secundarios/login_registro.jsx"],"sourcesContent":["import '../css/Registro/login.css';\nimport React, { useState } from 'react';\nimport { fazerLogin, registrarUsuario } from '../services/apiService'; \n\nfunction LoginForm({ onLoginSuccess }) {\n    const [formData, setFormData] = useState({\n        email: '',\n        senha: '' // ATENÇÃO: Confirme se seu PHP espera 'senha' ou 'password'\n    });\n    const [message, setMessage] = useState(null);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setMessage(null); \n\n        if (!formData.email || !formData.senha) {\n            setMessage({ sucesso: false, mensagem: \"Por favor, preencha o Email e a Senha.\" });\n            return;\n        }\n\n        // Chama a função de serviço de LOGIN\n        const resultado = await fazerLogin(formData); \n        \n        setMessage(resultado);\n\n        if (resultado.sucesso) {\n            onLoginSuccess(formData.email); // Informa ao componente pai (App) sobre o sucesso\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Login</h2>\n            \n            <div>\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                />\n            </div>\n\n            <div>\n                <label htmlFor=\"senha\">Senha:</label>\n                <input\n                    type=\"password\"\n                    id=\"senha\"\n                    name=\"senha\" // Deve bater com a chave enviada no formData\n                    value={formData.senha}\n                    onChange={handleChange}\n                    required\n                />\n            </div>\n\n            <button type=\"submit\">Entrar</button>\n\n            {message && (\n                <div style={{ color: message.sucesso ? 'green' : 'red', marginTop: '10px' }}>\n                    {message.mensagem}\n                </div>\n            )}\n        </form>\n    );\n}\n\nconst RegistrationForm = () => {\n    const [formData, setFormData] = useState({\n        full_name: '', \n        email: '', \n        date_nas: '', \n        cpf: '', \n        telefone: '', \n        password: '', // ATENÇÃO: Deve bater com o que o PHP espera\n        confirm_password: ''\n    });\n    const [status, setStatus] = useState({ mensagem: '', sucesso: false });\n    const [loading, setLoading] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        setStatus({ mensagem: '', sucesso: false });\n\n        if (formData.password !== formData.confirm_password) {\n            setStatus({ mensagem: \"As senhas não coincidem!\", sucesso: false });\n            return;\n        }\n\n        setStatus({ mensagem: 'Enviando dados...', sucesso: false });\n        setLoading(true);\n\n        // Chama a função de serviço de REGISTRO\n        const resultadoAPI = await registrarUsuario(formData); \n\n        if (resultadoAPI.sucesso) {\n            setStatus({ mensagem: `Sucesso: ${resultadoAPI.mensagem}`, sucesso: true });\n            setFormData({ // Limpa os campos após sucesso\n                full_name: '', email: '', date_nas: '', \n                cpf: '', telefone: '', password: '', \n                confirm_password: ''\n            });\n        } else {\n            setStatus({ mensagem: `Erro: ${resultadoAPI.mensagem}`, sucesso: false });\n        }\n        setLoading(false);\n    };\n\n    return (\n        <form onSubmit={handleSubmit} method='POST'> \n            <h1>Registro</h1>\n            {/* Os nomes dos campos (name attribute) DEVEM bater com as chaves do objeto formData */}\n            <label htmlFor=\"register-name\">Nome Completo</label>\n            <input type=\"text\" id=\"register-name\" name=\"full_name\" value={formData.full_name} onChange={handleChange} required />\n            \n            <label htmlFor=\"register-email\">Email</label>\n            <input type=\"email\" id=\"register-email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n            \n            <label htmlFor=\"register-dataNascimento\">Data de Nascimento</label>\n            <input type=\"date\" id=\"register-dataNascimento\" name='date_nas' value={formData.date_nas} onChange={handleChange} required/>\n\n            <label htmlFor=\"register-cpf\">CPF</label>\n            <input type=\"text\" id=\"register-cpf\" name=\"cpf\" value={formData.cpf} onChange={handleChange} required maxLength={11}/>\n\n            <label htmlFor=\"register-telefone\">Telefone</label>\n            <input type=\"text\" id=\"register-telefone\" name=\"telefone\" value={formData.telefone} onChange={handleChange} required maxLength={12}/> \n\n            <label htmlFor=\"register-password\">Senha</label>\n            <input type=\"password\" id=\"register-password\" name=\"password\" value={formData.password} onChange={handleChange} required minLength={5}/>\n            \n            <label htmlFor=\"register-confirm-password\">Confirmação de Senha</label>\n            <input type=\"password\" id=\"register-confirm-password\" name=\"confirm_password\" value={formData.confirm_password} onChange={handleChange} required minLength={5}/>\n            \n            <input type=\"submit\" value={loading ? \"Cadastrando...\" : \"Cadastrar\"} disabled={loading} />\n            \n            {status.mensagem && <p className={status.sucesso ? 'success' : 'error'}>{status.mensagem}</p>}\n        </form>\n    );\n};\n\n\n// ==================================================================\n// 3. COMPONENTE PRINCIPAL (AuthPage)\n// ==================================================================\nconst AuthPage = () => {\n    const [isLogin, setIsLogin] = useState(true);\n    const [loginStatus, setLoginStatus] = useState(false); // Estado que será repassado para o App principal\n\n    const handleLoginSuccess = (email) => {\n        // 1. Atualiza o estado local (Para esconder o formulário de login/mostrar o botão de sair)\n        setLoginStatus(true); \n        \n        // 2. Persiste o estado (Conforme sua lógica anterior)\n        localStorage.setItem('usuarioLogado', 'true'); \n        \n        alert(`Login de ${email} realizado com sucesso!`);\n\n        // 3. Redirecionamento (Se aplicável)\n        window.location.href = '/index.html'; \n    };\n\n    return (\n        <div className=\"login_Registro\">\n            <div className=\"toggle-buttons\">\n                <button \n                    onClick={() => setIsLogin(true)} \n                    style={{ fontWeight: isLogin ? 'bold' : 'normal' }}\n                >\n                    Login\n                </button>\n                <button \n                    onClick={() => setIsLogin(false)} \n                    style={{ fontWeight: !isLogin ? 'bold' : 'normal' }}\n                >\n                    Registro\n                </button>\n            </div>\n            \n            {/* Passa a função de sucesso para o LoginForm */}\n            {isLogin ? (\n                <LoginForm \n                    onLoginSuccess={handleLoginSuccess} \n                />\n            ) : (\n                <RegistrationForm />\n            )}\n        </div>\n    );\n};\n\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}