{"ast":null,"code":"import { useFormValidationState as $l55kx$useFormValidationState } from \"@react-stately/form\";\nimport { useControlledState as $l55kx$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $l55kx$useMemo, useState as $l55kx$useState } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 10000000000);\nlet $a54cdc5c1942b639$var$i = 0;\nfunction $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {\n  // Preserved here for backward compatibility. React Aria now generates the name instead of stately.\n  let name = (0, $l55kx$useMemo)(() => props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`, [props.name]);\n  var _props_defaultValue;\n  let [selectedValue, setSelected] = (0, $l55kx$useControlledState)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);\n  let [initialValue] = (0, $l55kx$useState)(selectedValue);\n  let [lastFocusedValue, setLastFocusedValue] = (0, $l55kx$useState)(null);\n  let validation = (0, $l55kx$useFormValidationState)({\n    ...props,\n    value: selectedValue\n  });\n  let setSelectedValue = value => {\n    if (!props.isReadOnly && !props.isDisabled) {\n      setSelected(value);\n      validation.commitValidation();\n    }\n  };\n  let isInvalid = validation.displayValidation.isInvalid;\n  var _props_defaultValue1;\n  return {\n    ...validation,\n    name: name,\n    selectedValue: selectedValue,\n    defaultSelectedValue: props.value !== undefined ? initialValue : (_props_defaultValue1 = props.defaultValue) !== null && _props_defaultValue1 !== void 0 ? _props_defaultValue1 : null,\n    setSelectedValue: setSelectedValue,\n    lastFocusedValue: lastFocusedValue,\n    setLastFocusedValue: setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isRequired: props.isRequired || false,\n    validationState: props.validationState || (isInvalid ? 'invalid' : null),\n    isInvalid: isInvalid\n  };\n}\nexport { $a54cdc5c1942b639$export$bca9d026f8e704eb as useRadioGroupState };","map":{"version":3,"names":["$a54cdc5c1942b639$var$instance","Math","round","random","$a54cdc5c1942b639$var$i","$a54cdc5c1942b639$export$bca9d026f8e704eb","props","name","$l55kx$useMemo","_props_defaultValue","selectedValue","setSelected","$l55kx$useControlledState","value","defaultValue","onChange","initialValue","$l55kx$useState","lastFocusedValue","setLastFocusedValue","validation","$l55kx$useFormValidationState","setSelectedValue","isReadOnly","isDisabled","commitValidation","isInvalid","displayValidation","_props_defaultValue1","defaultSelectedValue","undefined","isRequired","validationState"],"sources":["C:\\Users\\Aluno\\Documents\\GitHub\\--Arcano_Store--\\arcanostore\\node_modules\\@react-stately\\radio\\dist\\packages\\@react-stately\\radio\\src\\useRadioGroupState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FormValidationState, useFormValidationState} from '@react-stately/form';\nimport {RadioGroupProps} from '@react-types/radio';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport interface RadioGroupState extends FormValidationState {\n  /**\n   * The name for the group, used for native form submission.\n   * @deprecated\n   * @private\n   */\n  readonly name: string,\n\n  /** Whether the radio group is disabled. */\n  readonly isDisabled: boolean,\n\n  /** Whether the radio group is read only. */\n  readonly isReadOnly: boolean,\n\n  /** Whether the radio group is required. */\n  readonly isRequired: boolean,\n\n  /**\n   * Whether the radio group is valid or invalid.\n   * @deprecated Use `isInvalid` instead.\n   */\n  readonly validationState: ValidationState | null,\n\n  /** Whether the radio group is invalid. */\n  readonly isInvalid: boolean,\n\n  /** The currently selected value. */\n  readonly selectedValue: string | null,\n\n  /** The default selected value. */\n  readonly defaultSelectedValue: string | null,\n\n  /** Sets the selected value. */\n  setSelectedValue(value: string | null): void,\n\n  /** The value of the last focused radio. */\n  readonly lastFocusedValue: string | null,\n\n  /** Sets the last focused value. */\n  setLastFocusedValue(value: string | null): void\n}\n\nlet instance = Math.round(Math.random() * 10000000000);\nlet i = 0;\n\n/**\n * Provides state management for a radio group component. Provides a name for the group,\n * and manages selection and focus state.\n */\nexport function useRadioGroupState(props: RadioGroupProps): RadioGroupState  {\n  // Preserved here for backward compatibility. React Aria now generates the name instead of stately.\n  let name = useMemo(() => props.name || `radio-group-${instance}-${++i}`, [props.name]);\n  let [selectedValue, setSelected] = useControlledState(props.value, props.defaultValue ?? null, props.onChange);\n  let [initialValue] = useState(selectedValue);\n  let [lastFocusedValue, setLastFocusedValue] = useState<string | null>(null);\n\n  let validation = useFormValidationState({\n    ...props,\n    value: selectedValue\n  });\n\n  let setSelectedValue = (value) => {\n    if (!props.isReadOnly && !props.isDisabled) {\n      setSelected(value);\n      validation.commitValidation();\n    }\n  };\n\n  let isInvalid = validation.displayValidation.isInvalid;\n\n  return {\n    ...validation,\n    name,\n    selectedValue: selectedValue,\n    defaultSelectedValue: props.value !== undefined ? initialValue : props.defaultValue ?? null,\n    setSelectedValue,\n    lastFocusedValue,\n    setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isRequired: props.isRequired || false,\n    validationState: props.validationState || (isInvalid ? 'invalid' : null),\n    isInvalid\n  };\n}\n"],"mappings":";;;;AAAA;;;;;;;;;;;;AA4DA,IAAIA,8BAAA,GAAWC,IAAA,CAAKC,KAAK,CAACD,IAAA,CAAKE,MAAM,KAAK;AAC1C,IAAIC,uBAAA,GAAI;AAMD,SAASC,0CAAmBC,KAAsB;EACvD;EACA,IAAIC,IAAA,GAAO,IAAAC,cAAM,EAAE,MAAMF,KAAA,CAAMC,IAAI,IAAI,eAAeP,8BAAA,IAAY,EAAEI,uBAAA,EAAG,EAAE,CAACE,KAAA,CAAMC,IAAI,CAAC;MAClBE,mBAAA;EAAnE,IAAI,CAACC,aAAA,EAAeC,WAAA,CAAY,GAAG,IAAAC,yBAAiB,EAAEN,KAAA,CAAMO,KAAK,EAAE,CAAAJ,mBAAA,GAAAH,KAAA,CAAMQ,YAAY,cAAlBL,mBAAA,cAAAA,mBAAA,GAAsB,MAAMH,KAAA,CAAMS,QAAQ;EAC7G,IAAI,CAACC,YAAA,CAAa,GAAG,IAAAC,eAAO,EAAEP,aAAA;EAC9B,IAAI,CAACQ,gBAAA,EAAkBC,mBAAA,CAAoB,GAAG,IAAAF,eAAO,EAAiB;EAEtE,IAAIG,UAAA,GAAa,IAAAC,6BAAqB,EAAE;IACtC,GAAGf,KAAK;IACRO,KAAA,EAAOH;EACT;EAEA,IAAIY,gBAAA,GAAoBT,KAAA;IACtB,IAAI,CAACP,KAAA,CAAMiB,UAAU,IAAI,CAACjB,KAAA,CAAMkB,UAAU,EAAE;MAC1Cb,WAAA,CAAYE,KAAA;MACZO,UAAA,CAAWK,gBAAgB;IAC7B;EACF;EAEA,IAAIC,SAAA,GAAYN,UAAA,CAAWO,iBAAiB,CAACD,SAAS;MAMaE,oBAAA;EAJnE,OAAO;IACL,GAAGR,UAAU;UACbb,IAAA;IACAG,aAAA,EAAeA,aAAA;IACfmB,oBAAA,EAAsBvB,KAAA,CAAMO,KAAK,KAAKiB,SAAA,GAAYd,YAAA,GAAe,CAAAY,oBAAA,GAAAtB,KAAA,CAAMQ,YAAY,cAAlBc,oBAAA,cAAAA,oBAAA,GAAsB;sBACvFN,gBAAA;sBACAJ,gBAAA;yBACAC,mBAAA;IACAK,UAAA,EAAYlB,KAAA,CAAMkB,UAAU,IAAI;IAChCD,UAAA,EAAYjB,KAAA,CAAMiB,UAAU,IAAI;IAChCQ,UAAA,EAAYzB,KAAA,CAAMyB,UAAU,IAAI;IAChCC,eAAA,EAAiB1B,KAAA,CAAM0B,eAAe,KAAKN,SAAA,GAAY,YAAY,IAAG;eACtEA;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}