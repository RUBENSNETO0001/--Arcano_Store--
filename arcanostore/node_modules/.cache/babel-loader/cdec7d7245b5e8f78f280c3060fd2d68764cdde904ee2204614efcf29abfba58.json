{"ast":null,"code":"import { ariaHideOutside as $5e3802645cc19319$export$1c3ebcada18427bf, keepVisible as $5e3802645cc19319$export$1020fa7f77e17884 } from \"./ariaHideOutside.mjs\";\nimport { useOverlayPosition as $2a41e45df1593e64$export$d39e1813b3bdd0e1 } from \"./useOverlayPosition.mjs\";\nimport { useOverlay as $a11501f3d1d39e6c$export$ea8f71083e90600f } from \"./useOverlay.mjs\";\nimport { usePreventScroll as $49c51c25361d4cd2$export$ee0f7cc6afcd1c18 } from \"./usePreventScroll.mjs\";\nimport { mergeProps as $m0yab$mergeProps } from \"@react-aria/utils\";\nimport { useEffect as $m0yab$useEffect } from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $f2f8a6077418541e$export$542a6fd13ac93354(props, state) {\n  let {\n    triggerRef: triggerRef,\n    popoverRef: popoverRef,\n    groupRef: groupRef,\n    isNonModal: isNonModal,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside,\n    ...otherProps\n  } = props;\n  let isSubmenu = otherProps['trigger'] === 'SubmenuTrigger';\n  let {\n    overlayProps: overlayProps,\n    underlayProps: underlayProps\n  } = (0, $a11501f3d1d39e6c$export$ea8f71083e90600f)({\n    isOpen: state.isOpen,\n    onClose: state.close,\n    shouldCloseOnBlur: true,\n    isDismissable: !isNonModal || isSubmenu,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n  }, groupRef !== null && groupRef !== void 0 ? groupRef : popoverRef);\n  let {\n    overlayProps: positionProps,\n    arrowProps: arrowProps,\n    placement: placement,\n    triggerAnchorPoint: origin\n  } = (0, $2a41e45df1593e64$export$d39e1813b3bdd0e1)({\n    ...otherProps,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    onClose: isNonModal && !isSubmenu ? state.close : null\n  });\n  (0, $49c51c25361d4cd2$export$ee0f7cc6afcd1c18)({\n    isDisabled: isNonModal || !state.isOpen\n  });\n  (0, $m0yab$useEffect)(() => {\n    if (state.isOpen && popoverRef.current) {\n      var _groupRef_current, _groupRef_current1;\n      if (isNonModal) return (0, $5e3802645cc19319$export$1020fa7f77e17884)((_groupRef_current = groupRef === null || groupRef === void 0 ? void 0 : groupRef.current) !== null && _groupRef_current !== void 0 ? _groupRef_current : popoverRef.current);else return (0, $5e3802645cc19319$export$1c3ebcada18427bf)([(_groupRef_current1 = groupRef === null || groupRef === void 0 ? void 0 : groupRef.current) !== null && _groupRef_current1 !== void 0 ? _groupRef_current1 : popoverRef.current], {\n        shouldUseInert: true\n      });\n    }\n  }, [isNonModal, state.isOpen, popoverRef, groupRef]);\n  return {\n    popoverProps: (0, $m0yab$mergeProps)(overlayProps, positionProps),\n    arrowProps: arrowProps,\n    underlayProps: underlayProps,\n    placement: placement,\n    triggerAnchorPoint: origin\n  };\n}\nexport { $f2f8a6077418541e$export$542a6fd13ac93354 as usePopover };","map":{"version":3,"names":["$f2f8a6077418541e$export$542a6fd13ac93354","props","state","triggerRef","popoverRef","groupRef","isNonModal","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","otherProps","isSubmenu","overlayProps","underlayProps","$a11501f3d1d39e6c$export$ea8f71083e90600f","isOpen","onClose","close","shouldCloseOnBlur","isDismissable","positionProps","arrowProps","placement","triggerAnchorPoint","origin","$2a41e45df1593e64$export$d39e1813b3bdd0e1","targetRef","overlayRef","$49c51c25361d4cd2$export$ee0f7cc6afcd1c18","isDisabled","$m0yab$useEffect","current","_groupRef_current","_groupRef_current1","$5e3802645cc19319$export$1020fa7f77e17884","$5e3802645cc19319$export$1c3ebcada18427bf","shouldUseInert","popoverProps","$m0yab$mergeProps"],"sources":["C:\\Users\\Aluno\\Documents\\GitHub\\--Arcano_Store--\\arcanostore\\node_modules\\@heroui\\use-aria-modal-overlay\\node_modules\\@react-aria\\overlays\\dist\\packages\\@react-aria\\overlays\\src\\usePopover.ts"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ariaHideOutside, keepVisible} from './ariaHideOutside';\nimport {AriaPositionProps, useOverlayPosition} from './useOverlayPosition';\nimport {DOMAttributes, RefObject} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {PlacementAxis} from '@react-types/overlays';\nimport {useEffect} from 'react';\nimport {useOverlay} from './useOverlay';\nimport {usePreventScroll} from './usePreventScroll';\n\nexport interface AriaPopoverProps extends Omit<AriaPositionProps, 'isOpen' | 'onClose' | 'targetRef' | 'overlayRef'> {\n  /**\n   * The ref for the element which the popover positions itself with respect to.\n   */\n  triggerRef: RefObject<Element | null>,\n  /**\n   * The ref for the popover element.\n   */\n  popoverRef: RefObject<Element | null>,\n  /** A ref for the popover arrow element. */\n  arrowRef?: RefObject<Element | null>,\n  /**\n   * An optional ref for a group of popovers, e.g. submenus.\n   * When provided, this element is used to detect outside interactions\n   * and hiding elements from assistive technologies instead of the popoverRef.\n   */\n  groupRef?: RefObject<Element | null>,\n  /**\n   * Whether the popover is non-modal, i.e. elements outside the popover may be\n   * interacted with by assistive technologies.\n   *\n   * Most popovers should not use this option as it may negatively impact the screen\n   * reader experience. Only use with components such as combobox, which are designed\n   * to handle this situation carefully.\n   */\n  isNonModal?: boolean,\n  /**\n   * Whether pressing the escape key to close the popover should be disabled.\n   *\n   * Most popovers should not use this option. When set to true, an alternative\n   * way to close the popover with a keyboard must be provided.\n   *\n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean,\n  /**\n   * When user interacts with the argument element outside of the popover ref,\n   * return true if onClose should be called. This gives you a chance to filter\n   * out interaction with elements that should not dismiss the popover.\n   * By default, onClose will always be called on interaction outside the popover ref.\n   */\n  shouldCloseOnInteractOutside?: (element: Element) => boolean\n}\n\nexport interface PopoverAria {\n  /** Props for the popover element. */\n  popoverProps: DOMAttributes,\n  /** Props for the popover tip arrow if any. */\n  arrowProps: DOMAttributes,\n  /** Props to apply to the underlay element, if any. */\n  underlayProps: DOMAttributes,\n  /** Placement of the popover with respect to the trigger. */\n  placement: PlacementAxis | null,\n  /** The origin of the target in the overlay's coordinate system. Useful for animations. */\n  triggerAnchorPoint: {x: number, y: number} | null\n}\n\n/**\n * Provides the behavior and accessibility implementation for a popover component.\n * A popover is an overlay element positioned relative to a trigger.\n */\nexport function usePopover(props: AriaPopoverProps, state: OverlayTriggerState): PopoverAria {\n  let {\n    triggerRef,\n    popoverRef,\n    groupRef,\n    isNonModal,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside,\n    ...otherProps\n  } = props;\n\n  let isSubmenu = otherProps['trigger'] === 'SubmenuTrigger';\n\n  let {overlayProps, underlayProps} = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      shouldCloseOnBlur: true,\n      isDismissable: !isNonModal || isSubmenu,\n      isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside\n    },\n    groupRef ?? popoverRef\n  );\n\n  let {overlayProps: positionProps, arrowProps, placement, triggerAnchorPoint: origin} = useOverlayPosition({\n    ...otherProps,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    onClose: isNonModal && !isSubmenu ? state.close : null\n  });\n\n  usePreventScroll({\n    isDisabled: isNonModal || !state.isOpen\n  });\n\n  useEffect(() => {\n    if (state.isOpen && popoverRef.current) {\n      if (isNonModal) {\n        return keepVisible(groupRef?.current ?? popoverRef.current);\n      } else {\n        return ariaHideOutside([groupRef?.current ?? popoverRef.current], {shouldUseInert: true});\n      }\n    }\n  }, [isNonModal, state.isOpen, popoverRef, groupRef]);\n\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps,\n    underlayProps,\n    placement,\n    triggerAnchorPoint: origin\n  };\n}\n"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AAmFO,SAASA,0CAAWC,KAAuB,EAAEC,KAA0B;EAC5E,IAAI;IAAAC,UAAA,EACFA,UAAU;IAAAC,UAAA,EACVA,UAAU;IAAAC,QAAA,EACVA,QAAQ;IAAAC,UAAA,EACRA,UAAU;IAAAC,yBAAA,EACVA,yBAAyB;IAAAC,4BAAA,EACzBA,4BAA4B;IAC5B,GAAGC;EAAA,CACJ,GAAGR,KAAA;EAEJ,IAAIS,SAAA,GAAYD,UAAU,CAAC,UAAU,KAAK;EAE1C,IAAI;IAAAE,YAAA,EAACA,YAAY;IAAAC,aAAA,EAAEA;EAAa,CAAC,GAAG,IAAAC,yCAAS,EAC3C;IACEC,MAAA,EAAQZ,KAAA,CAAMY,MAAM;IACpBC,OAAA,EAASb,KAAA,CAAMc,KAAK;IACpBC,iBAAA,EAAmB;IACnBC,aAAA,EAAe,CAACZ,UAAA,IAAcI,SAAA;+BAC9BH,yBAAA;kCACAC;EACF,GACAH,QAAA,aAAAA,QAAA,cAAAA,QAAA,GAAYD,UAAA;EAGd,IAAI;IAACO,YAAA,EAAcQ,aAAa;IAAAC,UAAA,EAAEA,UAAU;IAAAC,SAAA,EAAEA,SAAS;IAAEC,kBAAA,EAAoBC;EAAM,CAAC,GAAG,IAAAC,yCAAiB,EAAE;IACxG,GAAGf,UAAU;IACbgB,SAAA,EAAWtB,UAAA;IACXuB,UAAA,EAAYtB,UAAA;IACZU,MAAA,EAAQZ,KAAA,CAAMY,MAAM;IACpBC,OAAA,EAAST,UAAA,IAAc,CAACI,SAAA,GAAYR,KAAA,CAAMc,KAAK,GAAG;EACpD;EAEA,IAAAW,yCAAe,EAAE;IACfC,UAAA,EAAYtB,UAAA,IAAc,CAACJ,KAAA,CAAMY;EACnC;EAEA,IAAAe,gBAAQ,EAAE;IACR,IAAI3B,KAAA,CAAMY,MAAM,IAAIV,UAAA,CAAW0B,OAAO,EAAE;UAEjBC,iBAAA,EAEKC,kBAAA;MAH1B,IAAI1B,UAAA,EACF,OAAO,IAAA2B,yCAAU,EAAE,CAAAF,iBAAA,GAAA1B,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAUyB,OAAO,cAAjBC,iBAAA,cAAAA,iBAAA,GAAqB3B,UAAA,CAAW0B,OAAO,OAE1D,OAAO,IAAAI,yCAAc,EAAE,CAAC,CAAAF,kBAAA,GAAA3B,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAUyB,OAAO,cAAjBE,kBAAA,cAAAA,kBAAA,GAAqB5B,UAAA,CAAW0B,OAAO,CAAC,EAAE;QAACK,cAAA,EAAgB;MAAI;IAE3F;EACF,GAAG,CAAC7B,UAAA,EAAYJ,KAAA,CAAMY,MAAM,EAAEV,UAAA,EAAYC,QAAA,CAAS;EAEnD,OAAO;IACL+B,YAAA,EAAc,IAAAC,iBAAS,EAAE1B,YAAA,EAAcQ,aAAA;gBACvCC,UAAA;mBACAR,aAAA;eACAS,SAAA;IACAC,kBAAA,EAAoBC;EACtB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}