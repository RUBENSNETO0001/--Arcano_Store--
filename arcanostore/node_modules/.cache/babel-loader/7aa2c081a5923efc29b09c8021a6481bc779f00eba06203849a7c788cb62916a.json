{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/--Arcano_Store--/arcanostore/src/componentes_principais/Navbar.jsx\",\n  _s = $RefreshSig$();\n// src/componentes_principais/Navbar.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport '../css/Navbar.css';\nimport AuthPage from '../componetes_secundarios/login_registro';\nimport Contato from './links/contato';\n\n// O componente principal agora recebe as props de navegação E de autenticação\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  apenasLogin = false,\n  onNavigate,\n  isLoggedIn,\n  onLogin,\n  onLogout\n}) => {\n  _s();\n  // onLogout será necessário para um botão de sair\n\n  const [isAuthOpen, setIsAuthOpen] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  // EFEITO: Controla o scroll do body para o modal\n  useEffect(() => {\n    if (isAuthOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, [isAuthOpen]);\n\n  // EFEITO: Controla a rolagem da Navbar\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // FUNÇÕES DE MANUSEIO\n  const handleLinkClick = view => {\n    setIsMobileMenuOpen(false);\n    if (onNavigate) {\n      onNavigate(view);\n    }\n  };\n  const handleLoginClick = () => {\n    setIsAuthOpen(true);\n    setIsMobileMenuOpen(false);\n  };\n\n  // Supondo que você precise passar a função de login para o modal AuthPage\n  const handleLoginSuccess = loginData => {\n    // Fecha o modal\n    setIsAuthOpen(false);\n    // Chama a função de login do App.js para atualizar o estado global\n    if (onLogin) {\n      onLogin(loginData);\n    }\n  };\n\n  // --- Lógica de Renderização Condicional dos Botões ---\n  const renderCTAs = () => {\n    if (isLoggedIn) {\n      // Se logado, mostra o botão do carrinho (navbar-cta2)\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-cta\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"navbar-cta2\",\n            className: \"cta-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-shopping-cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), \" Carrinho\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } else {\n      // Se não logado, mostra o botão de login (navbar-cta)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-cta\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"navbar-cta\",\n          className: \"cta-button\",\n          onClick: handleLoginClick,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `navbar ${isScrolled ? 'scrolled' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"navbar-logo-button\",\n            onClick: () => handleLinkClick('home'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"assents/logo/logo.svg\",\n              alt: \"logo\",\n              className: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Arcano Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), !apenasLogin && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navbar-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"navbar-link\",\n              onClick: () => handleLinkClick('home'),\n              children: \"In\\xEDcio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navbar-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"navbar-link\",\n              onClick: () => handleLinkClick('sobre'),\n              children: \"Sobre N\\xF3s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navbar-item\",\n            children: /*#__PURE__*/_jsxDEV(Contato, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), renderCTAs(), !apenasLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `navbar-toggle ${isMobileMenuOpen ? 'active' : ''}`,\n          onClick: () => setIsMobileMenuOpen(!isMobileMenuOpen),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), isAuthOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay active\",\n      children: /*#__PURE__*/_jsxDEV(AuthPage, {\n        onClose: () => setIsAuthOpen(false) // Prop para FECHAR o modal\n        ,\n        onLoginSuccess: handleLoginSuccess // Prop para SUCESSO do login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Navbar, \"TeFiB5dtIBuhFnwPIdcpaxrA57A=\");\n_c = Navbar;\nexport default Navbar; // Exportação ÚNICA e CORRETA\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","AuthPage","Contato","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","apenasLogin","onNavigate","isLoggedIn","onLogin","onLogout","_s","isAuthOpen","setIsAuthOpen","isScrolled","setIsScrolled","isMobileMenuOpen","setIsMobileMenuOpen","document","body","classList","add","remove","handleScroll","window","scrollY","addEventListener","removeEventListener","handleLinkClick","view","handleLoginClick","handleLoginSuccess","loginData","renderCTAs","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","onClose","onLoginSuccess","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/--Arcano_Store--/arcanostore/src/componentes_principais/Navbar.jsx"],"sourcesContent":["// src/componentes_principais/Navbar.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport '../css/Navbar.css';\nimport AuthPage from '../componetes_secundarios/login_registro';\nimport Contato from './links/contato';\n\n// O componente principal agora recebe as props de navegação E de autenticação\nconst Navbar = ({ apenasLogin = false, onNavigate, isLoggedIn, onLogin, onLogout }) => {\n    // onLogout será necessário para um botão de sair\n    \n    const [isAuthOpen, setIsAuthOpen] = useState(false);\n    const [isScrolled, setIsScrolled] = useState(false);\n    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n    // EFEITO: Controla o scroll do body para o modal\n    useEffect(() => {\n        if (isAuthOpen) {\n            document.body.classList.add('modal-open');\n        } else {\n            document.body.classList.remove('modal-open');\n        }\n        return () => {\n            document.body.classList.remove('modal-open');\n        };\n    }, [isAuthOpen]);\n\n    // EFEITO: Controla a rolagem da Navbar\n    useEffect(() => {\n        const handleScroll = () => {\n            setIsScrolled(window.scrollY > 50);\n        };\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, []);\n\n    // FUNÇÕES DE MANUSEIO\n    const handleLinkClick = (view) => {\n        setIsMobileMenuOpen(false);\n        if (onNavigate) {\n            onNavigate(view);\n        }\n    };\n\n    const handleLoginClick = () => {\n        setIsAuthOpen(true);\n        setIsMobileMenuOpen(false);\n    };\n    \n    // Supondo que você precise passar a função de login para o modal AuthPage\n    const handleLoginSuccess = (loginData) => {\n        // Fecha o modal\n        setIsAuthOpen(false);\n        // Chama a função de login do App.js para atualizar o estado global\n        if (onLogin) {\n            onLogin(loginData);\n        }\n    };\n\n    // --- Lógica de Renderização Condicional dos Botões ---\n    const renderCTAs = () => {\n        if (isLoggedIn) {\n            // Se logado, mostra o botão do carrinho (navbar-cta2)\n            return (\n                <>\n                    {/* Botão Carrinho Desktop */}\n                    <div className=\"navbar-cta\">\n                        <button id=\"navbar-cta2\" className=\"cta-button\">\n                            <i className=\"fas fa-shopping-cart\"></i> Carrinho\n                        </button>\n                    </div>\n                    {/* Botão Sair (Opcional) */}\n                    {/* <button onClick={onLogout}>Sair</button> */}\n                </>\n            );\n        } else {\n            // Se não logado, mostra o botão de login (navbar-cta)\n            return (\n                <div className=\"navbar-cta\">\n                    <button id=\"navbar-cta\" className=\"cta-button\" onClick={handleLoginClick}> \n                        Login \n                    </button>\n                </div>\n            );\n        }\n    };\n\n\n    return (\n        <>\n            {/* Navbar Principal */}\n            <nav className={`navbar ${isScrolled ? 'scrolled' : ''}`}>\n                <div className=\"navbar-container\">\n\n                    <div className=\"navbar-logo\">\n                        <button className='navbar-logo-button' onClick={() => handleLinkClick('home')}>\n                            <img src=\"assents/logo/logo.svg\" alt=\"logo\" className='logo' />\n                            <span>Arcano Store</span>\n                        </button>\n                    </div>\n\n                    {/* Menu Desktop */}\n                    {!apenasLogin && (\n                        <ul className=\"navbar-menu\">\n                            <li className=\"navbar-item\">\n                                <button className=\"navbar-link\" onClick={() => handleLinkClick('home')}>Início</button>\n                            </li>\n                            <li className=\"navbar-item\">\n                                <button className=\"navbar-link\" onClick={() => handleLinkClick('sobre')}>Sobre Nós</button>\n                            </li>\n                            <li className=\"navbar-item\"><Contato /></li>\n                        </ul>\n                    )}\n\n                    {/* Botões de Ação (Login/Carrinho) */}\n                    {renderCTAs()}\n\n                    {/* Menu mobile toggle */}\n                    {!apenasLogin && (\n                        <div\n                            className={`navbar-toggle ${isMobileMenuOpen ? 'active' : ''}`}\n                            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n                        >\n                            <span className=\"bar\"></span>\n                            <span className=\"bar\"></span>\n                            <span className=\"bar\"></span>\n                        </div>\n                    )}\n                </div>\n\n                {/* Menu mobile (Ajuste a lógica condicional aqui também se precisar) */}\n                {/* Você pode reutilizar renderCTAs() para o mobile ou criar uma versão separada */}\n                {/* ... (Seu código de menu mobile continua aqui) ... */}\n                \n            </nav>\n\n           {/* O MODAL DE AUTENTICAÇÃO */}\n            {isAuthOpen && (\n                <div className=\"modal-overlay active\">\n                    <AuthPage \n                        onClose={() => setIsAuthOpen(false)} // Prop para FECHAR o modal\n                        onLoginSuccess={handleLoginSuccess} // Prop para SUCESSO do login\n                    /> \n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Navbar; // Exportação ÚNICA e CORRETA"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAC1B,OAAOC,QAAQ,MAAM,0CAA0C;AAC/D,OAAOC,OAAO,MAAM,iBAAiB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,MAAM,GAAGA,CAAC;EAAEC,WAAW,GAAG,KAAK;EAAEC,UAAU;EAAEC,UAAU;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnF;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACAC,SAAS,CAAC,MAAM;IACZ,IAAIc,UAAU,EAAE;MACZM,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;IAC7C,CAAC,MAAM;MACHH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IAChD;IACA,OAAO,MAAM;MACTJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IAChD,CAAC;EACL,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;;EAEhB;EACAd,SAAS,CAAC,MAAM;IACZ,MAAMyB,YAAY,GAAGA,CAAA,KAAM;MACvBR,aAAa,CAACS,MAAM,CAACC,OAAO,GAAG,EAAE,CAAC;IACtC,CAAC;IACDD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,eAAe,GAAIC,IAAI,IAAK;IAC9BZ,mBAAmB,CAAC,KAAK,CAAC;IAC1B,IAAIV,UAAU,EAAE;MACZA,UAAU,CAACsB,IAAI,CAAC;IACpB;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3BjB,aAAa,CAAC,IAAI,CAAC;IACnBI,mBAAmB,CAAC,KAAK,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMc,kBAAkB,GAAIC,SAAS,IAAK;IACtC;IACAnB,aAAa,CAAC,KAAK,CAAC;IACpB;IACA,IAAIJ,OAAO,EAAE;MACTA,OAAO,CAACuB,SAAS,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIzB,UAAU,EAAE;MACZ;MACA,oBACIN,OAAA,CAAAE,SAAA;QAAA8B,QAAA,eAEIhC,OAAA;UAAKiC,SAAS,EAAC,YAAY;UAAAD,QAAA,eACvBhC,OAAA;YAAQkC,EAAE,EAAC,aAAa;YAACD,SAAS,EAAC,YAAY;YAAAD,QAAA,gBAC3ChC,OAAA;cAAGiC,SAAS,EAAC;YAAsB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,aAC5C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,gBAGR,CAAC;IAEX,CAAC,MAAM;MACH;MACA,oBACItC,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAD,QAAA,eACvBhC,OAAA;UAAQkC,EAAE,EAAC,YAAY;UAACD,SAAS,EAAC,YAAY;UAACM,OAAO,EAAEX,gBAAiB;UAAAI,QAAA,EAAC;QAE1E;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAEd;EACJ,CAAC;EAGD,oBACItC,OAAA,CAAAE,SAAA;IAAA8B,QAAA,gBAEIhC,OAAA;MAAKiC,SAAS,EAAE,UAAUrB,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;MAAAoB,QAAA,eACrDhC,OAAA;QAAKiC,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAE7BhC,OAAA;UAAKiC,SAAS,EAAC,aAAa;UAAAD,QAAA,eACxBhC,OAAA;YAAQiC,SAAS,EAAC,oBAAoB;YAACM,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAAC,MAAM,CAAE;YAAAM,QAAA,gBAC1EhC,OAAA;cAAKwC,GAAG,EAAC,uBAAuB;cAACC,GAAG,EAAC,MAAM;cAACR,SAAS,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/DtC,OAAA;cAAAgC,QAAA,EAAM;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,EAGL,CAAClC,WAAW,iBACTJ,OAAA;UAAIiC,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACvBhC,OAAA;YAAIiC,SAAS,EAAC,aAAa;YAAAD,QAAA,eACvBhC,OAAA;cAAQiC,SAAS,EAAC,aAAa;cAACM,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAAC,MAAM,CAAE;cAAAM,QAAA,EAAC;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvF,CAAC,eACLtC,OAAA;YAAIiC,SAAS,EAAC,aAAa;YAAAD,QAAA,eACvBhC,OAAA;cAAQiC,SAAS,EAAC,aAAa;cAACM,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAAC,OAAO,CAAE;cAAAM,QAAA,EAAC;YAAS;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3F,CAAC,eACLtC,OAAA;YAAIiC,SAAS,EAAC,aAAa;YAAAD,QAAA,eAAChC,OAAA,CAACF,OAAO;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CACP,EAGAP,UAAU,CAAC,CAAC,EAGZ,CAAC3B,WAAW,iBACTJ,OAAA;UACIiC,SAAS,EAAE,iBAAiBnB,gBAAgB,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC/DyB,OAAO,EAAEA,CAAA,KAAMxB,mBAAmB,CAAC,CAACD,gBAAgB,CAAE;UAAAkB,QAAA,gBAEtDhC,OAAA;YAAMiC,SAAS,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7BtC,OAAA;YAAMiC,SAAS,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7BtC,OAAA;YAAMiC,SAAS,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAML,CAAC,EAGL5B,UAAU,iBACPV,OAAA;MAAKiC,SAAS,EAAC,sBAAsB;MAAAD,QAAA,eACjChC,OAAA,CAACH,QAAQ;QACL6C,OAAO,EAAEA,CAAA,KAAM/B,aAAa,CAAC,KAAK,CAAE,CAAC;QAAA;QACrCgC,cAAc,EAAEd,kBAAmB,CAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA,eACH,CAAC;AAEX,CAAC;AAAC7B,EAAA,CA3IIN,MAAM;AAAAyC,EAAA,GAANzC,MAAM;AA6IZ,eAAeA,MAAM,CAAC,CAAC;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}