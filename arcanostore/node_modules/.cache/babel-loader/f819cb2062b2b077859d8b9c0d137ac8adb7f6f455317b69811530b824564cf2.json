{"ast":null,"code":"\"use client\";\n\n// src/table-select-all-checkbox.tsx\nimport { forwardRef } from \"@heroui/system\";\nimport { useDOMRef, filterDOMProps } from \"@heroui/react-utils\";\nimport { clsx, dataAttr, mergeProps } from \"@heroui/shared-utils\";\nimport { useTableColumnHeader, useTableSelectAllCheckbox } from \"@react-aria/table\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { Checkbox } from \"@heroui/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableSelectAllCheckbox = forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    as,\n    className,\n    node,\n    slots,\n    state,\n    selectionMode,\n    color,\n    checkboxesProps,\n    disableAnimation,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"th\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const {\n    columnHeaderProps\n  } = useTableColumnHeader({\n    node\n  }, state, domRef);\n  const {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing();\n  const {\n    checkboxProps\n  } = useTableSelectAllCheckbox(state);\n  const thStyles = clsx(classNames == null ? void 0 : classNames.th, className, (_a = node.props) == null ? void 0 : _a.className);\n  const isSingleSelectionMode = selectionMode === \"single\";\n  const {\n    onChange,\n    ...otherCheckboxProps\n  } = checkboxProps;\n  return /* @__PURE__ */jsx(Component, {\n    ref: domRef,\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    ...mergeProps(columnHeaderProps, focusProps, filterDOMProps(node.props, {\n      enabled: shouldFilterDOMProps\n    }), filterDOMProps(otherProps, {\n      enabled: shouldFilterDOMProps\n    })),\n    className: (_b = slots.th) == null ? void 0 : _b.call(slots, {\n      class: thStyles\n    }),\n    children: isSingleSelectionMode ? /* @__PURE__ */jsx(VisuallyHidden, {\n      children: checkboxProps[\"aria-label\"]\n    }) : /* @__PURE__ */jsx(Checkbox, {\n      color,\n      disableAnimation,\n      onValueChange: onChange,\n      ...mergeProps(checkboxesProps, otherCheckboxProps)\n    })\n  });\n});\nTableSelectAllCheckbox.displayName = \"HeroUI.TableSelectAllCheckbox\";\nvar table_select_all_checkbox_default = TableSelectAllCheckbox;\nexport { table_select_all_checkbox_default };","map":{"version":3,"names":["forwardRef","useDOMRef","filterDOMProps","clsx","dataAttr","mergeProps","useTableColumnHeader","useTableSelectAllCheckbox","useFocusRing","Checkbox","VisuallyHidden","jsx","TableSelectAllCheckbox","props","ref","_a","_b","as","className","node","slots","state","selectionMode","color","checkboxesProps","disableAnimation","classNames","otherProps","Component","shouldFilterDOMProps","domRef","columnHeaderProps","isFocusVisible","focusProps","checkboxProps","thStyles","th","isSingleSelectionMode","onChange","otherCheckboxProps","enabled","call","class","children","onValueChange","displayName","table_select_all_checkbox_default"],"sources":["C:/Users/Aluno/Documents/GitHub/--Arcano_Store--/arcanostore/node_modules/@heroui/react/node_modules/@heroui/table/dist/chunk-YQRLDUCT.mjs"],"sourcesContent":["\"use client\";\n\n// src/table-select-all-checkbox.tsx\nimport { forwardRef } from \"@heroui/system\";\nimport { useDOMRef, filterDOMProps } from \"@heroui/react-utils\";\nimport { clsx, dataAttr, mergeProps } from \"@heroui/shared-utils\";\nimport { useTableColumnHeader, useTableSelectAllCheckbox } from \"@react-aria/table\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { Checkbox } from \"@heroui/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableSelectAllCheckbox = forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    as,\n    className,\n    node,\n    slots,\n    state,\n    selectionMode,\n    color,\n    checkboxesProps,\n    disableAnimation,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"th\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { columnHeaderProps } = useTableColumnHeader({ node }, state, domRef);\n  const { isFocusVisible, focusProps } = useFocusRing();\n  const { checkboxProps } = useTableSelectAllCheckbox(state);\n  const thStyles = clsx(classNames == null ? void 0 : classNames.th, className, (_a = node.props) == null ? void 0 : _a.className);\n  const isSingleSelectionMode = selectionMode === \"single\";\n  const { onChange, ...otherCheckboxProps } = checkboxProps;\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ref: domRef,\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      ...mergeProps(\n        columnHeaderProps,\n        focusProps,\n        filterDOMProps(node.props, {\n          enabled: shouldFilterDOMProps\n        }),\n        filterDOMProps(otherProps, {\n          enabled: shouldFilterDOMProps\n        })\n      ),\n      className: (_b = slots.th) == null ? void 0 : _b.call(slots, { class: thStyles }),\n      children: isSingleSelectionMode ? /* @__PURE__ */ jsx(VisuallyHidden, { children: checkboxProps[\"aria-label\"] }) : /* @__PURE__ */ jsx(\n        Checkbox,\n        {\n          color,\n          disableAnimation,\n          onValueChange: onChange,\n          ...mergeProps(checkboxesProps, otherCheckboxProps)\n        }\n      )\n    }\n  );\n});\nTableSelectAllCheckbox.displayName = \"HeroUI.TableSelectAllCheckbox\";\nvar table_select_all_checkbox_default = TableSelectAllCheckbox;\n\nexport {\n  table_select_all_checkbox_default\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,SAAS,EAAEC,cAAc,QAAQ,qBAAqB;AAC/D,SAASC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,sBAAsB;AACjE,SAASC,oBAAoB,EAAEC,yBAAyB,QAAQ,mBAAmB;AACnF,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,GAAG,QAAQ,mBAAmB;AACvC,IAAIC,sBAAsB,GAAGZ,UAAU,CAAC,CAACa,KAAK,EAAEC,GAAG,KAAK;EACtD,IAAIC,EAAE,EAAEC,EAAE;EACV,MAAM;IACJC,EAAE;IACFC,SAAS;IACTC,IAAI;IACJC,KAAK;IACLC,KAAK;IACLC,aAAa;IACbC,KAAK;IACLC,eAAe;IACfC,gBAAgB;IAChBC,UAAU;IACV,GAAGC;EACL,CAAC,GAAGd,KAAK;EACT,MAAMe,SAAS,GAAGX,EAAE,IAAI,IAAI;EAC5B,MAAMY,oBAAoB,GAAG,OAAOD,SAAS,KAAK,QAAQ;EAC1D,MAAME,MAAM,GAAG7B,SAAS,CAACa,GAAG,CAAC;EAC7B,MAAM;IAAEiB;EAAkB,CAAC,GAAGzB,oBAAoB,CAAC;IAAEa;EAAK,CAAC,EAAEE,KAAK,EAAES,MAAM,CAAC;EAC3E,MAAM;IAAEE,cAAc;IAAEC;EAAW,CAAC,GAAGzB,YAAY,CAAC,CAAC;EACrD,MAAM;IAAE0B;EAAc,CAAC,GAAG3B,yBAAyB,CAACc,KAAK,CAAC;EAC1D,MAAMc,QAAQ,GAAGhC,IAAI,CAACuB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACU,EAAE,EAAElB,SAAS,EAAE,CAACH,EAAE,GAAGI,IAAI,CAACN,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGE,EAAE,CAACG,SAAS,CAAC;EAChI,MAAMmB,qBAAqB,GAAGf,aAAa,KAAK,QAAQ;EACxD,MAAM;IAAEgB,QAAQ;IAAE,GAAGC;EAAmB,CAAC,GAAGL,aAAa;EACzD,OAAO,eAAgBvB,GAAG,CACxBiB,SAAS,EACT;IACEd,GAAG,EAAEgB,MAAM;IACX,oBAAoB,EAAE1B,QAAQ,CAAC4B,cAAc,CAAC;IAC9C,GAAG3B,UAAU,CACX0B,iBAAiB,EACjBE,UAAU,EACV/B,cAAc,CAACiB,IAAI,CAACN,KAAK,EAAE;MACzB2B,OAAO,EAAEX;IACX,CAAC,CAAC,EACF3B,cAAc,CAACyB,UAAU,EAAE;MACzBa,OAAO,EAAEX;IACX,CAAC,CACH,CAAC;IACDX,SAAS,EAAE,CAACF,EAAE,GAAGI,KAAK,CAACgB,EAAE,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGpB,EAAE,CAACyB,IAAI,CAACrB,KAAK,EAAE;MAAEsB,KAAK,EAAEP;IAAS,CAAC,CAAC;IACjFQ,QAAQ,EAAEN,qBAAqB,GAAG,eAAgB1B,GAAG,CAACD,cAAc,EAAE;MAAEiC,QAAQ,EAAET,aAAa,CAAC,YAAY;IAAE,CAAC,CAAC,GAAG,eAAgBvB,GAAG,CACpIF,QAAQ,EACR;MACEc,KAAK;MACLE,gBAAgB;MAChBmB,aAAa,EAAEN,QAAQ;MACvB,GAAGjC,UAAU,CAACmB,eAAe,EAAEe,kBAAkB;IACnD,CACF;EACF,CACF,CAAC;AACH,CAAC,CAAC;AACF3B,sBAAsB,CAACiC,WAAW,GAAG,+BAA+B;AACpE,IAAIC,iCAAiC,GAAGlC,sBAAsB;AAE9D,SACEkC,iCAAiC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}