{"ast":null,"code":"import { useCheckbox as $406796ff087fe49b$export$e375f10ce42261c5 } from \"./useCheckbox.mjs\";\nimport { checkboxGroupData as $1ae600c947479353$export$ec98120685d4f57d } from \"./utils.mjs\";\nimport { useFormValidationState as $6clEo$useFormValidationState, DEFAULT_VALIDATION_RESULT as $6clEo$DEFAULT_VALIDATION_RESULT, privateValidationStateProp as $6clEo$privateValidationStateProp } from \"@react-stately/form\";\nimport { useRef as $6clEo$useRef, useEffect as $6clEo$useEffect } from \"react\";\nimport { useToggleState as $6clEo$useToggleState } from \"@react-stately/toggle\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {\n  const toggleState = (0, $6clEo$useToggleState)({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    defaultSelected: state.defaultValue.includes(props.value),\n    onChange(isSelected) {\n      if (isSelected) state.addValue(props.value);else state.removeValue(props.value);\n      if (props.onChange) props.onChange(isSelected);\n    }\n  });\n  let {\n    name: name,\n    form: form,\n    descriptionId: descriptionId,\n    errorMessageId: errorMessageId,\n    validationBehavior: validationBehavior\n  } = (0, $1ae600c947479353$export$ec98120685d4f57d).get(state);\n  var _props_validationBehavior;\n  validationBehavior = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : validationBehavior;\n  // Local validation for this checkbox.\n  let {\n    realtimeValidation: realtimeValidation\n  } = (0, $6clEo$useFormValidationState)({\n    ...props,\n    value: toggleState.isSelected,\n    // Server validation is handled at the group level.\n    name: undefined,\n    validationBehavior: 'aria'\n  });\n  // Update the checkbox group state when realtime validation changes.\n  let nativeValidation = (0, $6clEo$useRef)((0, $6clEo$DEFAULT_VALIDATION_RESULT));\n  let updateValidation = () => {\n    state.setInvalid(props.value, realtimeValidation.isInvalid ? realtimeValidation : nativeValidation.current);\n  };\n  (0, $6clEo$useEffect)(updateValidation);\n  // Combine group and checkbox level validation.\n  let combinedRealtimeValidation = state.realtimeValidation.isInvalid ? state.realtimeValidation : realtimeValidation;\n  let displayValidation = validationBehavior === 'native' ? state.displayValidation : combinedRealtimeValidation;\n  var _props_isRequired;\n  let res = (0, $406796ff087fe49b$export$e375f10ce42261c5)({\n    ...props,\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || name,\n    form: props.form || form,\n    isRequired: (_props_isRequired = props.isRequired) !== null && _props_isRequired !== void 0 ? _props_isRequired : state.isRequired,\n    validationBehavior: validationBehavior,\n    [(0, $6clEo$privateValidationStateProp)]: {\n      realtimeValidation: combinedRealtimeValidation,\n      displayValidation: displayValidation,\n      resetValidation: state.resetValidation,\n      commitValidation: state.commitValidation,\n      updateValidation(v) {\n        nativeValidation.current = v;\n        updateValidation();\n      }\n    }\n  }, toggleState, inputRef);\n  return {\n    ...res,\n    inputProps: {\n      ...res.inputProps,\n      'aria-describedby': [props['aria-describedby'], state.isInvalid ? errorMessageId : null, descriptionId].filter(Boolean).join(' ') || undefined\n    }\n  };\n}\nexport { $fba3e38d5ca8983f$export$353b32fc6898d37d as useCheckboxGroupItem };","map":{"version":3,"names":["$fba3e38d5ca8983f$export$353b32fc6898d37d","props","state","inputRef","toggleState","$6clEo$useToggleState","isReadOnly","isSelected","value","defaultSelected","defaultValue","includes","onChange","addValue","removeValue","name","form","descriptionId","errorMessageId","validationBehavior","$1ae600c947479353$export$ec98120685d4f57d","get","_props_validationBehavior","realtimeValidation","$6clEo$useFormValidationState","undefined","nativeValidation","$6clEo$useRef","$6clEo$DEFAULT_VALIDATION_RESULT","updateValidation","setInvalid","isInvalid","current","$6clEo$useEffect","combinedRealtimeValidation","displayValidation","_props_isRequired","res","$406796ff087fe49b$export$e375f10ce42261c5","isDisabled","isRequired","$6clEo$privateValidationStateProp","resetValidation","commitValidation","v","inputProps","filter","Boolean","join"],"sources":["C:\\Users\\Aluno\\Documents\\GitHub\\--Arcano_Store--\\arcanostore\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\useCheckboxGroupItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupItemProps} from '@react-types/checkbox';\nimport {CheckboxAria, useCheckbox} from './useCheckbox';\nimport {checkboxGroupData} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {DEFAULT_VALIDATION_RESULT, privateValidationStateProp, useFormValidationState} from '@react-stately/form';\nimport {RefObject, ValidationResult} from '@react-types/shared';\nimport {useEffect, useRef} from 'react';\nimport {useToggleState} from '@react-stately/toggle';\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component contained within a checkbox group.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useCheckboxGroupState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckboxGroupItem(props: AriaCheckboxGroupItemProps, state: CheckboxGroupState, inputRef: RefObject<HTMLInputElement | null>): CheckboxAria {\n  const toggleState = useToggleState({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    defaultSelected: state.defaultValue.includes(props.value),\n    onChange(isSelected) {\n      if (isSelected) {\n        state.addValue(props.value);\n      } else {\n        state.removeValue(props.value);\n      }\n\n      if (props.onChange) {\n        props.onChange(isSelected);\n      }\n    }\n  });\n\n  let {name, form, descriptionId, errorMessageId, validationBehavior} = checkboxGroupData.get(state)!;\n  validationBehavior = props.validationBehavior ?? validationBehavior;\n\n  // Local validation for this checkbox.\n  let {realtimeValidation} = useFormValidationState({\n    ...props,\n    value: toggleState.isSelected,\n    // Server validation is handled at the group level.\n    name: undefined,\n    validationBehavior: 'aria'\n  });\n\n  // Update the checkbox group state when realtime validation changes.\n  let nativeValidation = useRef(DEFAULT_VALIDATION_RESULT);\n  let updateValidation = () => {\n    state.setInvalid(props.value, realtimeValidation.isInvalid ? realtimeValidation : nativeValidation.current);\n  };\n\n  useEffect(updateValidation);\n\n  // Combine group and checkbox level validation.\n  let combinedRealtimeValidation = state.realtimeValidation.isInvalid ? state.realtimeValidation : realtimeValidation;\n  let displayValidation = validationBehavior === 'native' ? state.displayValidation : combinedRealtimeValidation;\n\n  let res = useCheckbox({\n    ...props,\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || name,\n    form: props.form || form,\n    isRequired: props.isRequired ?? state.isRequired,\n    validationBehavior,\n    [privateValidationStateProp]: {\n      realtimeValidation: combinedRealtimeValidation,\n      displayValidation,\n      resetValidation: state.resetValidation,\n      commitValidation: state.commitValidation,\n      updateValidation(v: ValidationResult) {\n        nativeValidation.current = v;\n        updateValidation();\n      }\n    }\n  }, toggleState, inputRef);\n\n  return {\n    ...res,\n    inputProps: {\n      ...res.inputProps,\n      'aria-describedby': [\n        props['aria-describedby'],\n        state.isInvalid ? errorMessageId : null,\n        descriptionId\n      ].filter(Boolean).join(' ') || undefined\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}