{"ast":null,"code":"import { radioGroupData as $884aeceb3d67f00f$export$37b65e5b5444d35c } from \"./utils.mjs\";\nimport { filterDOMProps as $czmJy$filterDOMProps, getOwnerWindow as $czmJy$getOwnerWindow, useId as $czmJy$useId, mergeProps as $czmJy$mergeProps } from \"@react-aria/utils\";\nimport { getFocusableTreeWalker as $czmJy$getFocusableTreeWalker } from \"@react-aria/focus\";\nimport { useField as $czmJy$useField } from \"@react-aria/label\";\nimport { useFocusWithin as $czmJy$useFocusWithin } from \"@react-aria/interactions\";\nimport { useLocale as $czmJy$useLocale } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $430f30ed08ec25fa$export$62b9571f283ff5c2(props, state) {\n  let {\n    name: name,\n    form: form,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired,\n    isDisabled: isDisabled,\n    orientation = 'vertical',\n    validationBehavior = 'aria'\n  } = props;\n  let {\n    direction: direction\n  } = (0, $czmJy$useLocale)();\n  let {\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = state.displayValidation;\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $czmJy$useField)({\n    ...props,\n    // Radio group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span',\n    isInvalid: state.isInvalid,\n    errorMessage: props.errorMessage || validationErrors\n  });\n  let domProps = (0, $czmJy$filterDOMProps)(props, {\n    labelable: true\n  });\n  // When the radio group loses focus, reset the focusable radio to null if\n  // there is no selection. This allows tabbing into the group from either\n  // direction to go to the first or last radio.\n  let {\n    focusWithinProps: focusWithinProps\n  } = (0, $czmJy$useFocusWithin)({\n    onBlurWithin(e) {\n      var _props_onBlur;\n      (_props_onBlur = props.onBlur) === null || _props_onBlur === void 0 ? void 0 : _props_onBlur.call(props, e);\n      if (!state.selectedValue) state.setLastFocusedValue(null);\n    },\n    onFocusWithin: props.onFocus,\n    onFocusWithinChange: props.onFocusChange\n  });\n  let onKeyDown = e => {\n    let nextDir;\n    switch (e.key) {\n      case 'ArrowRight':\n        if (direction === 'rtl' && orientation !== 'vertical') nextDir = 'prev';else nextDir = 'next';\n        break;\n      case 'ArrowLeft':\n        if (direction === 'rtl' && orientation !== 'vertical') nextDir = 'next';else nextDir = 'prev';\n        break;\n      case 'ArrowDown':\n        nextDir = 'next';\n        break;\n      case 'ArrowUp':\n        nextDir = 'prev';\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n    let walker = (0, $czmJy$getFocusableTreeWalker)(e.currentTarget, {\n      from: e.target,\n      accept: node => node instanceof (0, $czmJy$getOwnerWindow)(node).HTMLInputElement && node.type === 'radio'\n    });\n    let nextElem;\n    if (nextDir === 'next') {\n      nextElem = walker.nextNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.firstChild();\n      }\n    } else {\n      nextElem = walker.previousNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.lastChild();\n      }\n    }\n    if (nextElem) {\n      // Call focus on nextElem so that keyboard navigation scrolls the radio into view\n      nextElem.focus();\n      state.setSelectedValue(nextElem.value);\n    }\n  };\n  let groupName = (0, $czmJy$useId)(name);\n  (0, $884aeceb3d67f00f$export$37b65e5b5444d35c).set(state, {\n    name: groupName,\n    form: form,\n    descriptionId: descriptionProps.id,\n    errorMessageId: errorMessageProps.id,\n    validationBehavior: validationBehavior\n  });\n  return {\n    radioGroupProps: (0, $czmJy$mergeProps)(domProps, {\n      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup\n      role: 'radiogroup',\n      onKeyDown: onKeyDown,\n      'aria-invalid': state.isInvalid || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      'aria-disabled': isDisabled || undefined,\n      'aria-orientation': orientation,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  };\n}\nexport { $430f30ed08ec25fa$export$62b9571f283ff5c2 as useRadioGroup };","map":{"version":3,"names":["$430f30ed08ec25fa$export$62b9571f283ff5c2","props","state","name","form","isReadOnly","isRequired","isDisabled","orientation","validationBehavior","direction","$czmJy$useLocale","isInvalid","validationErrors","validationDetails","displayValidation","labelProps","fieldProps","descriptionProps","errorMessageProps","$czmJy$useField","labelElementType","errorMessage","domProps","$czmJy$filterDOMProps","labelable","focusWithinProps","$czmJy$useFocusWithin","onBlurWithin","e","_props_onBlur","onBlur","call","selectedValue","setLastFocusedValue","onFocusWithin","onFocus","onFocusWithinChange","onFocusChange","onKeyDown","nextDir","key","preventDefault","walker","$czmJy$getFocusableTreeWalker","currentTarget","from","target","accept","node","$czmJy$getOwnerWindow","HTMLInputElement","type","nextElem","nextNode","currentNode","firstChild","previousNode","lastChild","focus","setSelectedValue","value","groupName","$czmJy$useId","$884aeceb3d67f00f$export$37b65e5b5444d35c","set","descriptionId","id","errorMessageId","radioGroupProps","$czmJy$mergeProps","role","undefined"],"sources":["C:\\Users\\Aluno\\Documents\\GitHub\\--Arcano_Store--\\arcanostore\\node_modules\\@react-aria\\radio\\dist\\packages\\@react-aria\\radio\\src\\useRadioGroup.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioGroupProps} from '@react-types/radio';\nimport {DOMAttributes, ValidationResult} from '@react-types/shared';\nimport {filterDOMProps, getOwnerWindow, mergeProps, useId} from '@react-aria/utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {radioGroupData} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\n\nexport interface RadioGroupAria extends ValidationResult {\n  /** Props for the radio group wrapper element. */\n  radioGroupProps: DOMAttributes,\n  /** Props for the radio group's visible label (if any). */\n  labelProps: DOMAttributes,\n  /** Props for the radio group description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the radio group error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a radio group component.\n * Radio groups allow users to select a single item from a list of mutually exclusive options.\n * @param props - Props for the radio group.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n */\nexport function useRadioGroup(props: AriaRadioGroupProps, state: RadioGroupState): RadioGroupAria {\n  let {\n    name,\n    form,\n    isReadOnly,\n    isRequired,\n    isDisabled,\n    orientation = 'vertical',\n    validationBehavior = 'aria'\n  } = props;\n  let {direction} = useLocale();\n\n  let {isInvalid, validationErrors, validationDetails} = state.displayValidation;\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    // Radio group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span',\n    isInvalid: state.isInvalid,\n    errorMessage: props.errorMessage || validationErrors\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  // When the radio group loses focus, reset the focusable radio to null if\n  // there is no selection. This allows tabbing into the group from either\n  // direction to go to the first or last radio.\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin(e) {\n      props.onBlur?.(e);\n      if (!state.selectedValue) {\n        state.setLastFocusedValue(null);\n      }\n    },\n    onFocusWithin: props.onFocus,\n    onFocusWithinChange: props.onFocusChange\n  });\n\n  let onKeyDown = (e) => {\n    let nextDir;\n    switch (e.key) {\n      case 'ArrowRight':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'prev';\n        } else {\n          nextDir = 'next';\n        }\n        break;\n      case 'ArrowLeft':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'next';\n        } else {\n          nextDir = 'prev';\n        }\n        break;\n      case 'ArrowDown':\n        nextDir = 'next';\n        break;\n      case 'ArrowUp':\n        nextDir = 'prev';\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n    let walker = getFocusableTreeWalker(e.currentTarget, {\n      from: e.target,\n      accept: (node) => node instanceof getOwnerWindow(node).HTMLInputElement && node.type === 'radio'\n    });\n    let nextElem;\n    if (nextDir === 'next') {\n      nextElem = walker.nextNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.firstChild();\n      }\n    } else {\n      nextElem = walker.previousNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.lastChild();\n      }\n    }\n    if (nextElem) {\n      // Call focus on nextElem so that keyboard navigation scrolls the radio into view\n      nextElem.focus();\n      state.setSelectedValue(nextElem.value);\n    }\n  };\n\n  let groupName = useId(name);\n  radioGroupData.set(state, {\n    name: groupName,\n    form,\n    descriptionId: descriptionProps.id,\n    errorMessageId: errorMessageProps.id,\n    validationBehavior\n  });\n\n  return {\n    radioGroupProps: mergeProps(domProps, {\n      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup\n      role: 'radiogroup',\n      onKeyDown,\n      'aria-invalid': state.isInvalid || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      'aria-disabled': isDisabled || undefined,\n      'aria-orientation': orientation,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps,\n    descriptionProps,\n    errorMessageProps,\n    isInvalid,\n    validationErrors,\n    validationDetails\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}