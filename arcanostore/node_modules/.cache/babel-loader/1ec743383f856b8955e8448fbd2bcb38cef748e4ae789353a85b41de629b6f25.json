{"ast":null,"code":"const PHP_SERVER_BASE = 'http://localhost';\nconst PHP_API_URL_REGISTRO = '/--Arcano_Store--/arcanostore/backend_php/login_registro/registro.php';\nconst PHP_API_URL_LOGIN = '/--Arcano_Store--/arcanostore/backend_php/login_registro/login.php';\nconst apiCall = async (url, data) => {\n  try {\n    const fullUrl = `${PHP_SERVER_BASE}${url}`;\n    const response = await fetch(fullUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      let errorMessage = `Erro HTTP: ${response.status}`;\n      try {\n        const errorData = JSON.parse(errorText);\n        errorMessage = errorData.mensagem || errorMessage;\n      } catch (e) {\n        errorMessage = errorText || errorMessage;\n      }\n      throw new Error(errorMessage);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Erro na comunicação com a API em ${url}:`, error);\n    return {\n      sucesso: false,\n      mensagem: error.message || \"Erro de conexão com o servidor.\"\n    };\n  }\n};\nexport const registrarUsuario = async userData => {\n  return apiCall(PHP_API_URL_REGISTRO, userData);\n};\nexport const fazerLogin = async loginData => {\n  return apiCall(PHP_API_URL_LOGIN, loginData);\n};","map":{"version":3,"names":["PHP_SERVER_BASE","PHP_API_URL_REGISTRO","PHP_API_URL_LOGIN","apiCall","url","data","fullUrl","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","errorMessage","status","errorData","parse","mensagem","e","Error","json","error","console","sucesso","message","registrarUsuario","userData","fazerLogin","loginData"],"sources":["C:/Users/Aluno/Documents/GitHub/--Arcano_Store--/arcanostore/src/services/apiService.js"],"sourcesContent":["const PHP_SERVER_BASE = 'http://localhost';\r\nconst PHP_API_URL_REGISTRO = '/--Arcano_Store--/arcanostore/backend_php/login_registro/registro.php';\r\nconst PHP_API_URL_LOGIN = '/--Arcano_Store--/arcanostore/backend_php/login_registro/login.php';\r\n\r\nconst apiCall = async (url, data) => {\r\n    try {\r\n        const fullUrl = `${PHP_SERVER_BASE}${url}`;\r\n        \r\n        const response = await fetch(fullUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            let errorMessage = `Erro HTTP: ${response.status}`;\r\n            \r\n            try {\r\n                const errorData = JSON.parse(errorText);\r\n                errorMessage = errorData.mensagem || errorMessage;\r\n            } catch (e) {\r\n                errorMessage = errorText || errorMessage;\r\n            }\r\n            throw new Error(errorMessage);\r\n        }\r\n        \r\n        return await response.json();\r\n\r\n    } catch (error) {\r\n        console.error(`Erro na comunicação com a API em ${url}:`, error);\r\n        \r\n        return { \r\n            sucesso: false, \r\n            mensagem: error.message || \"Erro de conexão com o servidor.\" \r\n        };\r\n    }\r\n};\r\n\r\nexport const registrarUsuario = async (userData) => {\r\n    return apiCall(PHP_API_URL_REGISTRO, userData);\r\n};\r\n\r\nexport const fazerLogin = async (loginData) => {\r\n    return apiCall(PHP_API_URL_LOGIN, loginData);\r\n};"],"mappings":"AAAA,MAAMA,eAAe,GAAG,kBAAkB;AAC1C,MAAMC,oBAAoB,GAAG,uEAAuE;AACpG,MAAMC,iBAAiB,GAAG,oEAAoE;AAE9F,MAAMC,OAAO,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,KAAK;EACjC,IAAI;IACA,MAAMC,OAAO,GAAG,GAAGN,eAAe,GAAGI,GAAG,EAAE;IAE1C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,EAAE;MAClCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,IAAIC,YAAY,GAAG,cAAcV,QAAQ,CAACW,MAAM,EAAE;MAElD,IAAI;QACA,MAAMC,SAAS,GAAGP,IAAI,CAACQ,KAAK,CAACL,SAAS,CAAC;QACvCE,YAAY,GAAGE,SAAS,CAACE,QAAQ,IAAIJ,YAAY;MACrD,CAAC,CAAC,OAAOK,CAAC,EAAE;QACRL,YAAY,GAAGF,SAAS,IAAIE,YAAY;MAC5C;MACA,MAAM,IAAIM,KAAK,CAACN,YAAY,CAAC;IACjC;IAEA,OAAO,MAAMV,QAAQ,CAACiB,IAAI,CAAC,CAAC;EAEhC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoCrB,GAAG,GAAG,EAAEqB,KAAK,CAAC;IAEhE,OAAO;MACHE,OAAO,EAAE,KAAK;MACdN,QAAQ,EAAEI,KAAK,CAACG,OAAO,IAAI;IAC/B,CAAC;EACL;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAChD,OAAO3B,OAAO,CAACF,oBAAoB,EAAE6B,QAAQ,CAAC;AAClD,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,SAAS,IAAK;EAC3C,OAAO7B,OAAO,CAACD,iBAAiB,EAAE8B,SAAS,CAAC;AAChD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}