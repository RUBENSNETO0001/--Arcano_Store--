{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/--Arcano_Store--/arcanostore/src/componetes_secundarios/login_registro.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport '../css/Registro/login.css';\nimport React, { useState } from 'react';\n// Certifique-se que o caminho para apiService.js está correto\nimport { fazerLogin } from '../services/apiService';\n\n// ------------------------------------------------------------------\n// FUNÇÃO DE SERVIÇO DE REGISTRO (PLACEHOLDER)\n// ------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registrarUsuario = async data => {\n  console.warn(\"AVISO: A função registrarUsuario está usando um placeholder. Verifique sua importação de apiService.\");\n  await new Promise(resolve => setTimeout(resolve, 500));\n  if (data.email === \"teste@duplicado.com\") {\n    return {\n      sucesso: false,\n      mensagem: \"Este email já está cadastrado.\"\n    };\n  }\n  return {\n    sucesso: true,\n    mensagem: \"Usuário registrado com sucesso (Placeholder).\"\n  };\n};\n\n// ==================================================================\n// 1. COMPONENTE DE LOGIN (CORRIGIDO)\n// ==================================================================\n// Recebe onLoginSuccess como uma prop\nfunction LoginForm({\n  onLoginSuccess\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState(null);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(null);\n    if (!formData.email || !formData.password) {\n      setMessage({\n        sucesso: false,\n        mensagem: \"Por favor, preencha o Email e a Senha.\"\n      });\n      return;\n    }\n    const resultado = await fazerLogin(formData);\n    setMessage(resultado);\n    if (resultado.sucesso) {\n      console.log(\"Login OK:\", resultado);\n\n      // CHAMA A FUNÇÃO PROP QUE ESTÁ NO COMPONENTE PAI (AuthPage)\n      onLoginSuccess();\n\n      // O componente pai (AuthPage) agora gerencia o localStorage e o redirecionamento.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Entrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: message.sucesso ? 'green' : 'red',\n        marginTop: '10px'\n      },\n      children: message.mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n// ==================================================================\n// 2. COMPONENTE DE REGISTRO (INALTERADO)\n// ==================================================================\n_s(LoginForm, \"jOjfsmYIxEViI7yJjtHuJW6Iso8=\");\n_c = LoginForm;\nconst RegistrationForm = () => {\n  _s2();\n  const [formData, setFormData] = useState({\n    full_name: '',\n    email: '',\n    date_nas: '',\n    cpf: '',\n    telefone: '',\n    password: '',\n    confirm_password: ''\n  });\n  const [status, setStatus] = useState({\n    mensagem: '',\n    sucesso: false\n  });\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus({\n      mensagem: '',\n      sucesso: false\n    });\n    if (formData.password !== formData.confirm_password) {\n      setStatus({\n        mensagem: \"As senhas não coincidem!\",\n        sucesso: false\n      });\n      return;\n    }\n    setStatus({\n      mensagem: 'Enviando dados...',\n      sucesso: false\n    });\n    setLoading(true);\n    const resultadoAPI = await registrarUsuario(formData);\n    if (resultadoAPI.sucesso) {\n      setStatus({\n        mensagem: `Sucesso: ${resultadoAPI.mensagem}`,\n        sucesso: true\n      });\n      setFormData({\n        full_name: '',\n        email: '',\n        date_nas: '',\n        cpf: '',\n        telefone: '',\n        password: '',\n        confirm_password: ''\n      });\n    } else {\n      setStatus({\n        mensagem: `Erro: ${resultadoAPI.mensagem}`,\n        sucesso: false\n      });\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    method: \"POST\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-name\",\n      children: \"Nome Completo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"register-name\",\n      name: \"full_name\",\n      value: formData.full_name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"register-email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-dataNascimento\",\n      children: \"Data de Nascimento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"register-dataNascimento\",\n      name: \"date_nas\",\n      value: formData.date_nas,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-cpf\",\n      children: \"CPF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"register-cpf\",\n      name: \"cpf\",\n      value: formData.cpf,\n      onChange: handleChange,\n      required: true,\n      maxLength: 11\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-telefone\",\n      children: \"Telefone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"register-telefone\",\n      name: \"telefone\",\n      value: formData.telefone,\n      onChange: handleChange,\n      required: true,\n      maxLength: 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-password\",\n      children: \"Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"register-password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      required: true,\n      minLength: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-confirm-password\",\n      children: \"Confirma\\xE7\\xE3o de Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"register-confirm-password\",\n      name: \"confirm_password\",\n      value: formData.confirm_password,\n      onChange: handleChange,\n      required: true,\n      minLength: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: loading ? \"Cadastrando...\" : \"Cadastrar\",\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), status.mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: status.sucesso ? 'success' : 'error',\n      children: status.mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n// ==================================================================\n// 3. COMPONENTE PRINCIPAL (ÚNICO DEFAULT EXPORT)\n// ==================================================================\n_s2(RegistrationForm, \"FE5CssQfxnUIQPGvU00n7s2d+80=\");\n_c2 = RegistrationForm;\nconst AuthPage = () => {\n  _s3();\n  const [isLogin, setIsLogin] = useState(true);\n  const [setLoginStatus] = useState(false);\n\n  // Lógica para verificar o estado inicial (do localStorage)\n  React.useEffect(() => {\n    if (localStorage.getItem('usuarioLogado') === 'true') {\n      setLoginStatus(true);\n    } else {\n      setLoginStatus(false);\n    }\n  }, []);\n  const handleLoginSuccess = () => {\n    // ESSA FUNÇÃO DEVE SER PASSADA PARA O COMPONENTE PAI (App.js) \n    // para que ele possa esconder a modal/div de login\n    setLoginStatus(true);\n    localStorage.setItem('usuarioLogado', 'true');\n    alert(\"Login realizado com sucesso!\");\n    window.location.href = '/login';\n  };\n\n  // A VISIBILIDADE DA DIV_LOGIN DEVE SER CONTROLADA NO COMPONENTE PAI \n  // ONDE O <AuthPage /> É RENDERIZADO.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_Registro\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLogin(true),\n        style: {\n          fontWeight: isLogin ? 'bold' : 'normal'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLogin(false),\n        style: {\n          fontWeight: !isLogin ? 'bold' : 'normal'\n        },\n        children: \"Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), isLogin ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(RegistrationForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n};\n_s3(AuthPage, \"jaKj2f92Hiva6rGAo4dj60I1VNU=\");\n_c3 = AuthPage;\nexport default AuthPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"RegistrationForm\");\n$RefreshReg$(_c3, \"AuthPage\");","map":{"version":3,"names":["React","useState","fazerLogin","jsxDEV","_jsxDEV","registrarUsuario","data","console","warn","Promise","resolve","setTimeout","email","sucesso","mensagem","LoginForm","onLoginSuccess","_s","formData","setFormData","password","message","setMessage","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","resultado","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","required","style","color","marginTop","_c","RegistrationForm","_s2","full_name","date_nas","cpf","telefone","confirm_password","status","setStatus","loading","setLoading","resultadoAPI","method","maxLength","minLength","disabled","className","_c2","AuthPage","_s3","isLogin","setIsLogin","setLoginStatus","useEffect","localStorage","getItem","handleLoginSuccess","setItem","alert","window","location","href","onClick","fontWeight","_c3","$RefreshReg$"],"sources":["/opt/lampp/htdocs/--Arcano_Store--/arcanostore/src/componetes_secundarios/login_registro.jsx"],"sourcesContent":["import '../css/Registro/login.css';\nimport React, { useState } from 'react';\n// Certifique-se que o caminho para apiService.js está correto\nimport { fazerLogin } from '../services/apiService'; \n\n// ------------------------------------------------------------------\n// FUNÇÃO DE SERVIÇO DE REGISTRO (PLACEHOLDER)\n// ------------------------------------------------------------------\nconst registrarUsuario = async (data) => {\n    console.warn(\"AVISO: A função registrarUsuario está usando um placeholder. Verifique sua importação de apiService.\");\n    \n    await new Promise(resolve => setTimeout(resolve, 500)); \n    \n    if (data.email === \"teste@duplicado.com\") {\n        return { sucesso: false, mensagem: \"Este email já está cadastrado.\" };\n    }\n    \n    return { sucesso: true, mensagem: \"Usuário registrado com sucesso (Placeholder).\" };\n};\n\n\n// ==================================================================\n// 1. COMPONENTE DE LOGIN (CORRIGIDO)\n// ==================================================================\n// Recebe onLoginSuccess como uma prop\nfunction LoginForm({ onLoginSuccess }) { \n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n    const [message, setMessage] = useState(null);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setMessage(null); \n\n        if (!formData.email || !formData.password) {\n            setMessage({ sucesso: false, mensagem: \"Por favor, preencha o Email e a Senha.\" });\n            return;\n        }\n\n        const resultado = await fazerLogin(formData); \n        setMessage(resultado);\n\n        if (resultado.sucesso) {\n            console.log(\"Login OK:\", resultado);\n            \n            // CHAMA A FUNÇÃO PROP QUE ESTÁ NO COMPONENTE PAI (AuthPage)\n            onLoginSuccess(); \n            \n            // O componente pai (AuthPage) agora gerencia o localStorage e o redirecionamento.\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Login</h2>\n            \n            <div>\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                />\n            </div>\n\n            <div>\n                <label htmlFor=\"password\">Senha:</label>\n                <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    required\n                />\n            </div>\n\n            <button type=\"submit\">Entrar</button>\n\n            {message && (\n                <div style={{ color: message.sucesso ? 'green' : 'red', marginTop: '10px' }}>\n                    {message.mensagem}\n                </div>\n            )}\n        </form>\n    );\n}\n\n// ==================================================================\n// 2. COMPONENTE DE REGISTRO (INALTERADO)\n// ==================================================================\nconst RegistrationForm = () => {\n    const [formData, setFormData] = useState({\n        full_name: '', \n        email: '', \n        date_nas: '', \n        cpf: '', \n        telefone: '', \n        password: '', \n        confirm_password: ''\n    });\n    const [status, setStatus] = useState({ mensagem: '', sucesso: false });\n    const [loading, setLoading] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        setStatus({ mensagem: '', sucesso: false });\n\n        if (formData.password !== formData.confirm_password) {\n            setStatus({ mensagem: \"As senhas não coincidem!\", sucesso: false });\n            return;\n        }\n\n        setStatus({ mensagem: 'Enviando dados...', sucesso: false });\n        setLoading(true);\n\n        const resultadoAPI = await registrarUsuario(formData); \n\n        if (resultadoAPI.sucesso) {\n            setStatus({ mensagem: `Sucesso: ${resultadoAPI.mensagem}`, sucesso: true });\n            setFormData({ \n                full_name: '', email: '', date_nas: '', \n                cpf: '', telefone: '', password: '', \n                confirm_password: ''\n            });\n        } else {\n            setStatus({ mensagem: `Erro: ${resultadoAPI.mensagem}`, sucesso: false });\n        }\n        setLoading(false);\n    };\n\n    return (\n        <form onSubmit={handleSubmit} method='POST'> \n            <h1>Registro</h1>\n            <label htmlFor=\"register-name\">Nome Completo</label>\n            <input type=\"text\" id=\"register-name\" name=\"full_name\" value={formData.full_name} onChange={handleChange} required />\n            \n            <label htmlFor=\"register-email\">Email</label>\n            <input type=\"email\" id=\"register-email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n            \n            <label htmlFor=\"register-dataNascimento\">Data de Nascimento</label>\n            <input type=\"date\" id=\"register-dataNascimento\" name='date_nas' value={formData.date_nas} onChange={handleChange} required/>\n\n            <label htmlFor=\"register-cpf\">CPF</label>\n            <input type=\"text\" id=\"register-cpf\" name=\"cpf\" value={formData.cpf} onChange={handleChange} required maxLength={11}/>\n\n            <label htmlFor=\"register-telefone\">Telefone</label>\n            <input type=\"text\" id=\"register-telefone\" name=\"telefone\" value={formData.telefone} onChange={handleChange} required maxLength={12}/> \n\n            <label htmlFor=\"register-password\">Senha</label>\n            <input type=\"password\" id=\"register-password\" name=\"password\" value={formData.password} onChange={handleChange} required minLength={5}/>\n            \n            <label htmlFor=\"register-confirm-password\">Confirmação de Senha</label>\n            <input type=\"password\" id=\"register-confirm-password\" name=\"confirm_password\" value={formData.confirm_password} onChange={handleChange} required minLength={5}/>\n            \n            <input type=\"submit\" value={loading ? \"Cadastrando...\" : \"Cadastrar\"} disabled={loading} />\n            \n            {status.mensagem && <p className={status.sucesso ? 'success' : 'error'}>{status.mensagem}</p>}\n        </form>\n    );\n};\n\n\n// ==================================================================\n// 3. COMPONENTE PRINCIPAL (ÚNICO DEFAULT EXPORT)\n// ==================================================================\nconst AuthPage = () => {\n    const [isLogin, setIsLogin] = useState(true);\n    const [setLoginStatus] = useState(false);\n\n    // Lógica para verificar o estado inicial (do localStorage)\n    React.useEffect(() => {\n        if (localStorage.getItem('usuarioLogado') === 'true') {\n            setLoginStatus(true);\n        } else {\n            setLoginStatus(false);\n        }\n    }, []);\n\n    const handleLoginSuccess = () => {\n        // ESSA FUNÇÃO DEVE SER PASSADA PARA O COMPONENTE PAI (App.js) \n        // para que ele possa esconder a modal/div de login\n        setLoginStatus(true); \n        localStorage.setItem('usuarioLogado', 'true'); \n        alert(\"Login realizado com sucesso!\");\n        window.location.href = '/login'; \n    };\n\n    // A VISIBILIDADE DA DIV_LOGIN DEVE SER CONTROLADA NO COMPONENTE PAI \n    // ONDE O <AuthPage /> É RENDERIZADO.\n    \n    return (\n        <div className=\"login_Registro\">\n            <div className=\"toggle-buttons\">\n                <button \n                    onClick={() => setIsLogin(true)} \n                    style={{ fontWeight: isLogin ? 'bold' : 'normal' }}\n                >\n                    Login\n                </button>\n                <button \n                    onClick={() => setIsLogin(false)} \n                    style={{ fontWeight: !isLogin ? 'bold' : 'normal' }}\n                >\n                    Registro\n                </button>\n            </div>\n            \n            {isLogin ? (\n                <LoginForm onLoginSuccess={handleLoginSuccess} />\n            ) : (\n                <RegistrationForm />\n            )}\n        </div>\n    );\n};\n\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}